library ieee;
use ieee.std_logic_1164.all;

entity serial_receiver_lcd_tb is
end serial_receiver_lcd_tb;

architecture behavioral of serial_receiver_lcd_tb is

	component serial_receiver_lcd is
	port(
		clear: in std_logic;
		clk: in std_logic;
		sdx: in std_logic;
		sclk: in std_logic;
		ss: in std_logic;
		accept: in std_logic;
		DXval: out std_logic;
		data: out std_logic_vector(8 downto 0)
	);
	end component;

	-- UUT signals
	constant MCLK_PERIOD : time := 100 ps;
	constant MCLK_HALF_PERIOD : time := MCLK_PERIOD / 2;
	
	-- Component signals
	signal clk_tb, data_sdx_tb, init_tb, err_tb: std_logic;
begin

	-- Unit Under Test
	UUT: key_scan
	port map (
		clk => clk_tb
		sdx => sdx_tb,
		sclk => sclk_tb,
		ss => ss_tb,
		accept => accept_tb,
		DXval => DXval_tb,
		data => data_tb
	);

	clk_gen : process
	begin
		clk_tb <= '0';
		wait for MCLK_HALF_PERIOD;
		clk_tb <= '1';
		wait for MCLK_HALF_PERIOD;
	end process;
	
	stimulus: process 
	begin
	
		data_sdx_tb <= '0';
		init_tb <= '0';
		wait for MCLK_HALF_PERIOD;
		init_tb <= '1';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '1';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '0';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '0';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '0';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '1';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '0';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '1';
		wait for MCLK_PERIOD;
		data_sdx_tb <= '0';
		wait for MCLK_PERIOD;
		wait;
		
	end process;

end behavioral;
